#!/bin/sh

clock() {
	date '+%Y-%m-%d %H:%M'
}

battery() {
	BATC=/sys/class/power_supply/BAT1/capacity
	BATS=/sys/class/power_supply/BAT1/status

	test "`cat $BATS`" = "Charging" && echo -n '+' || echo -n '-'

	sed -n p $BATC
}

volume() {
	amixer get Master | sed -n 'N;s/^.*\[\([0-9]\+%\).*$/\1/p'
}

cpuload() {
	LINE=`ps -eo pcpu |grep -vE '^\s*(0.0|%CPU)' |sed -n '1h;$!H;$g;s/\n/ +/gp'`
	bc <<< $LINE
}

memused() {
	free -h | awk '/^Mem/ {print $3"/"$2}'
}

network() {
	DEVICE_ID="wlp3s0"
	IP=$(ip addr | grep $DEVICE_ID | awk '/inet/ {print $2}')

	STATUS=$(nmcli device status | grep -i "$DEVICE_ID" | awk '{$1=""; $2=""; print $0}' | \
		sed "s/\s\+/ /g" | \
		sed "s/ connected //" | \
		sed "s/--//g")

	if [[ ! -z $SHOW_IP ]]; then 
		echo $IP $STATUS
	else
		echo $STATUS
	fi
}

groups() {
	cur=`xprop -root _NET_CURRENT_DESKTOP | awk '{print $3}'`
	tot=`xprop -root _NET_NUMBER_OF_DESKTOPS | awk '{print $3}'`

	for w in `seq 0 $((cur - 1))`; do line="${line}-"; done
	line="${line}X"
	for w in `seq $((cur + 2)) $tot`; do line="${line}-"; done
	echo $line
}

nowplaying() {
	cur=`mpc current`
	# this line allow to choose whether the output will scroll or not
	test "$1" = "scroll" && PARSER='skroll -n20 -d0.5 -r' || PARSER='cat'
	test -n "$cur" && $PARSER <<< $cur || echo "- stopped -"
}

# This loop will fill a buffer with our infos, and output it to stdout.
while :; do
	buf=""
	buf="${buf} $(groups)"
	buf="${buf} %{c}$(clock)"
	buf="${buf} %{r}$(network) | "
	buf="${buf} VOL: $(volume)"
	# buf="${buf} MPD: $(nowplaying)"

	echo $buf
	# use `nowplaying scroll` to get a scrolling output!
	sleep 0.5 # The HUD will be updated every second
done

